{"ast":null,"code":"var _jsxFileName = \"/Users/irinak/Documents/GitHub/movies-db/src/features/Movies/Movies.tsx\";\nimport { connect } from \"react-redux\";\nimport { MovieCard } from \"./MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movies({\n  movies\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = Movies;\nconst mapStateToProps = state => ({\n  movies: state.movies.top\n});\nconst connector = connect(mapStateToProps);\nexport default _c2 = connector(Movies);\nvar _c, _c2;\n$RefreshReg$(_c, \"Movies\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["connect","MovieCard","jsxDEV","_jsxDEV","Movies","movies","children","map","m","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","mapStateToProps","state","top","connector","_c2","$RefreshReg$"],"sources":["/Users/irinak/Documents/GitHub/movies-db/src/features/Movies/Movies.tsx"],"sourcesContent":["import { Movie } from \"../../reducers/movies\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../store\";\nimport { MovieCard } from \"./MovieCard\";\n\ninterface MoviesProps {\n  movies: Movie[];\n}\n\nfunction Movies({ movies }: MoviesProps) {\n  return (\n    <div>\n      <ul>\n        {movies.map((m) => (\n          <li key={m.id}>\n            <MovieCard />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  movies: state.movies.top,\n});\n\nconst connector = connect(mapStateToProps);\n\nexport default connector(Movies);\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,aAAa;AAErC,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,SAASC,MAAMA,CAAC;EAAEC;AAAoB,CAAC,EAAE;EACvC,oBACEF,OAAA;IAAAG,QAAA,eACEH,OAAA;MAAAG,QAAA,EACGD,MAAM,CAACE,GAAG,CAAEC,CAAC,iBACZL,OAAA;QAAAG,QAAA,eACEH,OAAA,CAACF,SAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADNJ,CAAC,CAACK,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACE,EAAA,GAZQV,MAAM;AAcf,MAAMW,eAAe,GAAIC,KAAgB,KAAM;EAC7CX,MAAM,EAAEW,KAAK,CAACX,MAAM,CAACY;AACvB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGlB,OAAO,CAACe,eAAe,CAAC;AAE1C,eAAAI,GAAA,GAAeD,SAAS,CAACd,MAAM,CAAC;AAAC,IAAAU,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}